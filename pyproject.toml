[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta:__legacy__"

[tool.poetry]
name = "brandenburg"
version = "0.5.0"
description = ""
authors = ["Jesue Junior <jesuesousa@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.7,<3.10"
pydantic = {extras = ["dotenv","email"], version = "==1.8.2"}
fastapi = "==0.63.0"
orjson = "==3.5.2"
uvicorn = "==0.13.4"
aiologger = "==0.6.1"
uvloop = "==0.15.2"
boto3 = "==1.17.62"
aioredis = "==1.3.1"
phonenumbers = "==8.12.6"
google-auth = "==1.24.0"
google-cloud-pubsub = "==2.2.0"
google-cloud-storage = "==1.34.0"
python-multipart = "==0.0.5"

[tool.poetry.dev-dependencies]
asynctest = "==0.12.1"
pytest = "^6.2.3"
pytest-cov = "2.10.1"
pytest-mock = "3.3.1"
codecov = "2.0.17"
mypy = "0.782"
black = "20.8b1"
isort = "5.1.4"
lxml = "4.6.3"
sphinx = "3.2.1"
sphinx-issues = "1.2.0"
sphinx-intl = "2.0.1"
safety = "1.9.0"
flake8 = "3.8.4"
flake8-bugbear = "20.11.1"
bandit = "1.7.0"
pre-commit = "2.9.2"
pip = "^21.1.1"


[tool.isort]
multi_line_output = 3
include_trailing_comma = true
no_inline_sort = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
skip = []
import_heading_stdlib = 'Standard library imports'
import_heading_thirdparty = 'Third party imports'
import_heading_firstparty = 'Local application imports'
import_heading_localfolder = 'Local folder imports'
known_first_party = ['.']

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs          # exclude a few common directories in the
  | \.git           # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | tests/fixtures
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -v"
testpaths = [
    "tests",
]
python_files = "test_*.py"
junit_family = "legacy"

[tool.coverage.run]
branch = true
command_line = '-m pytest'
source = ['brandenburg/']

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true
skip_empty = true
fail_under = 90
xml = true
verbose = true
